createdAt: "2019-03-18T13:44:04.322Z"
updatedAt: "2019-05-07T20:06:37.679Z"
type: "MARKDOWN_NOTE"
folder: "a0297bfc77f01ccc53a6"
title: "General AWS Notes"
tags: []
content: '''
  # General AWS Notes
  
  ## Cloudformation
  Contains notes over Cloudformation-related things. They're Cloudformation-first, as in I would only be looking for them because I was working with CF
  
  ### VPC
  #### VPC + SQS
  [Amazon Virtual Private Cloud Endpoints for Amazon SQS
  ](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-vpc-endpoints.html)
  >To connect your VPC to Amazon SQS, you must first define an interface VPC endpoint, which lets you connect your VPC to other AWS services. 
  
  [Tutorial: Sending a Message to an Amazon SQS Queue from Amazon Virtual Private Cloud
  ](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-sending-messages-from-vpc.html)
  >[M]ake sure that you enable private DNS and use only endpoints in the format sqs.us-east-2.amazonaws.com. 
  - Creating an Amazon interface VPC endpoint allows you to send messages to a queue without accessing the public internet.
  > The service names vary based on the current AWS Region. For example, if you are in US East (Ohio), the service name is sqs.us-east-2.amazonaws.com.
  - The current networking template outputs private and public subnets, so those will have to be referenced in the stack templates.
  
  ____
  
  ### Lambda
  #### Lambda + RDS
  [Configuring a Lambda Function to Access Amazon RDS in an Amazon VPC](https://docs.aws.amazon.com/lambda/latest/dg/vpc-rds.html)
  
  ##### Execution Role
  - **AWSLambdaVPCAccessExecutionRole** has the permissions that the function needs to manage network connections to a VPC
  
  ##### Deployment Package
  - Python script can reside in S3 bucket and be invoked by Lambda function
  - Use [psycopg2](https://pypi.org/project/psycopg2/) as PostgreSQL driver for Python.
  
  ____
  
  ## RDS + IAM Authentication
  
  #### IAM Database Authentication for MySQL and PostgreSQL
  
  - With IAM authentication, no password is needed to connect to DB instance, just authentication token. 
  - Availability:
  
  > - PostgreSQL versions 10.6 or higher, 9.6.11 or higher, and 9.5.15 or higher.
  
  __CloudFormation-created RDS instances can use IAM authentication by enabling the following property:__
  
  > AWS::RDS::DBInstance
  > ```YAML
  > Type: AWS::RDS::DBInstance
  >   Properties : 
  >     EnableIAMDatabaseAuthentication: True
  > ```
  
  #### Creating and using and IAM Policy for IAM Database Access
  
  - First create an IAM Policy, then attach the policy to an IAM user or role.
  _Example_
  ```JSON
  {
     "Version": "2012-10-17",
     "Statement": [
        {
           "Effect": "Allow",
           "Action": [
               "rds-db:connect"
           ],
           "Resource": [
               "arn:aws:rds-db:us-east-2:1234567890:dbuser:db-ABCDEFGHIJKL01234/db_user"
           ]
        }
     ]
  }
  ```
  - The `rds-db:` prefix is not to be confused with `rds:`, the `rds-db:connect` action is use donly for IAM database authentication.
  - The resource identifier is as follows:
  - `arn:aws:rds-db:region:account-id:dbuser:DbiResourceId/db-user-name`
    - `region`: AWS Region for the DB instance
    - `account-id` AWS account number for DB instance
    -  `DbiResourceId` Identifier for the DB instance. The Resource ID can be found in the configuration section of the RDS console
    -  `db-user-name` name of the database account to associate with IAM authentication 
  -  Once the policy is created it can be attached to a user role.
  
  #### Creating Database Account Using IAM Authentication
   
  - Grant database users the `rds_iam` role when attaching them to an IAM role.
  _Example_
  ```SQL
  CREATE USER db_userx WITH LOGIN; 
  GRANT rds_iam TO db_userx;
  ```
'''
linesHighlighted: [
  45
]
isStarred: false
isTrashed: false
